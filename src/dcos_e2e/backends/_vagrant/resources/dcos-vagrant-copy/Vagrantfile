# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative 'lib/vagrant-dcos'
require 'vagrant/util/downloader'
require 'vagrant/ui'
require 'yaml'
require 'fileutils'
require 'digest'

require 'log4r/config'
UI = Log4r::Logger.new("dcos-vagrant")
UI.add Log4r::Outputter.stdout
if ENV['VAGRANT_LOG'] && ENV['VAGRANT_LOG'] != ''
  Log4r.define_levels(*Log4r::Log4rConfig::LogLevels)
  level = Log4r.const_get(ENV['VAGRANT_LOG'].upcase)
  UI.level = level
end

system('./provision/bin/vbox-network.sh')

Vagrant.configure(2) do |config|

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false

  config.ssh.insert_key = false
  config.vbguest.auto_update = true

  machine_types.each do |name, machine_type|
    config.vm.define name do |machine|
      # TODO Add unique to the hostname
      machine.vm.hostname = "#{name}.dcos"

      # custom mount type
      machine.vm.synced_folder '.', '/vagrant', type: virtualbox

      machine.vm.box = 'mesosphere/dcos-centos-virtualbox'
      machine.vm.box_url = 'https://downloads.dcos.io/dcos-vagrant/metadata.json'
      machine.vm.box_version = '~> 0.9.2'

      machine.vm.provider 'virtualbox' do |v, override|
        v.name = machine.vm.hostname
        v.cpus = 2
        v.memory = 2048

        # Manually configure DNS
        v.auto_nat_dns_proxy = false
        # NAT proxy is flakey (times out frequently)
        v.customize ['modifyvm', :id, '--natdnsproxy1', 'off']
        # Host DNS resolution required to support host proxies and faster global DNS resolution
        v.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
        # Assign unique mac address
        v.customize ['modifyvm', :id, '--macaddress1', 'auto']

        # guest should sync time if more than 10s off host
        v.customize [ "guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 1000 ]
      end

      # Hack to remove loopback host alias that conflicts with vagrant-hostmanager
      # https://jira.mesosphere.com/browse/DCOS_VAGRANT-15
      machine.vm.provision :shell, inline: "sed -i'' '/^127.0.0.1\\t#{machine.vm.hostname}\\t#{name}$/d' /etc/hosts"

      # provision a shared SSH key (required by DC/OS SSH installer)
      machine.vm.provision :dcos_ssh, name: 'Shared SSH Key'

      machine.vm.provision :shell do |vm|
        vm.name = 'Certificate Authorities'
        vm.path = './provision/bin/ca-certificates.sh'
      end

    end
  end
end
